version: '3.8'

services:
  spark-iceberg:
    image: tabulario/spark-iceberg:latest
    container_name: spark-iceberg
    networks:
      - lakehouse
    depends_on:
      - rest
      - minio
    volumes:
      - ./jars:/opt/extra-jars
      - ./warehouse:/home/iceberg/warehouse      
      - ./notebooks:/home/iceberg/notebooks
      - ./config/spark-defaults.conf:/opt/spark/conf/spark-defaults.conf
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    ports:
      - "8888:8888"   
      - "8080:8080"   
      - "10000:10000"
      - "10001:10001"

  rest:
    image: tabulario/iceberg-rest:latest
    container_name: iceberg-rest
    environment:
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: password
      AWS_REGION: us-east-1
      CATALOG_WAREHOUSE: s3://warehouse/
      CATALOG_IO__IMPL: org.apache.iceberg.aws.s3.S3FileIO
      CATALOG_S3_ENDPOINT: http://minio:9000
    ports:
      - "8181:8181"
    networks:
      - lakehouse

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
    networks:
      lakehouse:
        aliases:
          - warehouse.minio
    ports:
      - "9000:9000"   
      - "9001:9001"   
    command: ["server", "/data", "--console-address", ":9001"]
    volumes:
      - minio_data:/data

  mc:
    depends_on:
      - minio
    image: minio/mc:latest
    container_name: mc
    networks:
      - lakehouse
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    entrypoint: |
      /bin/sh -c "
      until (/usr/bin/mc alias set minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/warehouse;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc policy set public minio/warehouse;
      tail -f /dev/null
      "

  metastore_db:
    image: postgres:14
    container_name: metastore_db
    environment:
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: hive
      POSTGRES_DB: metastore
    networks:
      - lakehouse
    volumes:
      - metastore_db:/var/lib/postgresql/data

  hive-metastore:
    image: starburstdata/hive:3.1.2-e.18
    container_name: hive-metastore
    depends_on:
      - metastore_db
      - minio
    environment:
      HIVE_METASTORE_DRIVER: org.postgresql.Driver
      HIVE_METASTORE_JDBC_URL: jdbc:postgresql://metastore_db:5432/metastore
      HIVE_METASTORE_USER: hive
      HIVE_METASTORE_PASSWORD: hive
      HIVE_METASTORE_WAREHOUSE_DIR: s3://warehouse/
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: admin
      S3_SECRET_KEY: password
      S3_PATH_STYLE_ACCESS: "true"
      REGION: ""
      GOOGLE_CLOUD_KEY_FILE_PATH: ""
      AZURE_ADL_CLIENT_ID: ""
      AZURE_ADL_CREDENTIAL: ""
      AZURE_ADL_REFRESH_URL: ""
      AZURE_ABFS_STORAGE_ACCOUNT: ""
      AZURE_ABFS_ACCESS_KEY: ""
      AZURE_WASB_STORAGE_ACCOUNT: ""
      AZURE_ABFS_OAUTH: ""
      AZURE_ABFS_OAUTH_TOKEN_PROVIDER: ""
      AZURE_ABFS_OAUTH_CLIENT_ID: ""
      AZURE_ABFS_OAUTH_SECRET: ""
      AZURE_ABFS_OAUTH_ENDPOINT: ""
      AZURE_WASB_ACCESS_KEY: ""
      HIVE_METASTORE_USERS_IN_ADMIN_ROLE: "admin"
    ports:
      - "9083:9083"   
    networks:
      - lakehouse

  trino:
    image: trinodb/trino:457
    container_name: trino
    ports:
      - "8081:8080"  
    networks:
      - lakehouse
    volumes:
      - ./trino/etc:/etc/trino
      - ./trino/catalog:/etc/trino/catalog

networks:
  lakehouse:

volumes:
  minio_data:
  metastore_db: